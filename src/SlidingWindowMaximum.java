import java.util.ArrayDeque;
import java.util.Deque;

public class SlidingWindowMaximum {


    public static void main(String[] args) {

        int a[] = new int[]{1, 3, -1, -3, 5, 3, 6, 7};
        int k = 3;

//        int solution[] = new int[nums.length - k + 1];
//        int index = 0;
//        for (int i = 0; i < nums.length; i++) {
//            Deque<Integer> dq = new ArrayDeque<>();
//            while (!dq.isEmpty() && dq.peek() < i - k + 1) {
//
//                System.out.println("1hyjgyjgyjg"+dq.poll());
//
//            }
//            while (!q.isEmpty() && a[q.peekLast()] < a[i]) {
//            while (!dq.isEmpty() && nums[i] > nums[dq.peekLast()]) {
//                System.out.println("2gfuygyug"+dq.pollLast());
//            }
//            System.out.println("value of i"+i);
//            dq.offer(i);
//            System.out.println(dq.toString());
//            if (i >= k - 1) {
//                solution[index++] = nums[dq.peek()];
//                System.out.println("3gyjgyjg"+solution[index-1]);
//            }


    .
























































    .................................................










































































































































































































































































































































































































































































































    ............................................................................................................................................................................................
    .....................................................................

